buildscript {

    repositories {
        jcenter()
        mavenCentral()
        maven {url "https://plugins.gradle.org/m2/"}
    }

    dependencies {
        classpath 'nl.javadude.gradle.plugins:license-gradle-plugin:0.11.0'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.6'
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.12.0'
        classpath 'net.nemerosa:versioning:1.6.2'
        classpath 'org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.7'
    }
}

allprojects {
    apply plugin: 'base'
    apply plugin: 'idea'
	apply plugin: 'eclipse'
    apply plugin: 'com.github.ben-manes.versions'
    apply plugin: 'maven'
    apply plugin: 'signing'
    apply plugin: 'org.sonarqube'

    repositories {
        jcenter()
        mavenCentral()
    }

    if (JavaVersion.current().isJava8Compatible()) {
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }
    
    wrapper {            
		gradleVersion = '5.2.1'
	}

	sourceCompatibility = 1.8
	targetCompatibility = 1.8
	//compileJava.options.encoding = 'UTF-8'
		
}

subprojects { subproj ->
    apply plugin: 'java'
    apply from: rootProject.file('gradle/javafx.gradle')

    configurations {
        compileOnly
        testCompileOnly
    }
    
    test {
	    useJUnitPlatform()
	}

    subproj.tasks.withType(JavaCompile) {
        sourceCompatibility = subproj.sourceCompatibility
        targetCompatibility = subproj.targetCompatibility
    }

    subproj.tasks.withType(GroovyCompile) {
        sourceCompatibility = subproj.sourceCompatibility
        targetCompatibility = subproj.targetCompatibility
    }

    dependencies {    
        // compileOnly project.files(project.jfxrtLocation)
        
        testCompile 'org.junit.jupiter:junit-jupiter-api:5.4.1'
        
    	testCompile 'org.testfx:openjfx-monocle:8u76-b04'
        testCompile 'org.testfx:testfx-junit5:4.0.15-alpha'
        
	    testRuntime 'org.junit.jupiter:junit-jupiter-engine:5.4.1'
    }

    sourceSets {
        main {
            compileClasspath += configurations.compileOnly
        }
        test {
            compileClasspath += configurations.testCompileOnly
        }
    }
    
    javadoc {
       classpath += configurations.compileOnly
    }

    idea {
        module {
          scopes.PROVIDED.plus += configurations.compileOnly
          scopes.PROVIDED.plus += configurations.testCompileOnly
        }
    }
}