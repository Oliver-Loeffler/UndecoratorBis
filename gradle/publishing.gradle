import java.text.SimpleDateFormat

Date buildTimeAndDate = new Date()
ext {
    buildDate = new SimpleDateFormat('yyyy-MM-dd').format(buildTimeAndDate)
    buildTime = new SimpleDateFormat('HH:mm:ss.SSSZ').format(buildTimeAndDate)
}

apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'net.nemerosa.versioning'

jar {
    manifest {
        attributes(
            'Built-By': System.properties['user.name'],
            'Created-By': System.properties['java.version'] + " (" + System.properties['java.vendor'] + " " + System.properties['java.vm.version'] + ")",
            'Build-Date': project.buildDate,
            'Build-Time': project.buildTime,
            'Build-Revision': versioning.info.commit,
            'Specification-Title': project.name,
            'Specification-Version': project.version,
            'Implementation-Title': project.name,
            'Implementation-Version': project.version,
        )
    }
}

task sourcesJar(type: Jar) {
    group 'Build'
    description 'An archive of the source code'
    classifier 'sources'    
    from sourceSets.main.allSource
}

task javadocJar(type: Jar) {
    group 'Build'
    description 'An archive of the javadoc'
    classifier 'javadoc'
    from javadoc.destinationDir
}


def pomConfig = {
    name project.name
    url project.project_url
    inceptionYear '2014'
    licenses {
        license([:]) {
            name 'BSD'
            url 'https://opensource.org/licenses/BSD-2-Clause'
            distribution 'repo'
        }
    }
    scm {
        url project.project_scm
    }
    developers { 
        developer {
            id 'in-sidefx'
            name 'Arnaud Nouard'
            roles{ role 'Developer' }
        }
    }
}

publishing {
    publications {      
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar

            pom.withXml {
                asNode().children().last() + pomConfig
                asNode().appendNode('description', project.project_description)
            }
        }
    }
}

if (!project.hasProperty('bintrayUsername')) ext.bintrayUsername = 'in-sidefx'
if (!project.hasProperty('bintrayApiKey')) ext.bintrayApiKey = ''

bintray {
    publications = ['mavenJava']
    pkg {
        repo = project.project_bintray_repo
        userOrg = project.project_bintray_org
        name = project.name
        desc = project.project_description
        licenses = ['BSD 2-Clause']
        labels = ['javafx']
        websiteUrl = project.project_url
        issueTrackerUrl = project.project_issues
        vcsUrl = project.project_scm
        publicDownloadNumbers = true
    }
}

// MAVEN CENTRAL
uploadArchives {
  repositories {
    mavenDeployer {
      beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

      repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
        authentication(userName: ossrhUsername, password: ossrhPassword)
      }

      snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
        authentication(userName: ossrhUsername, password: ossrhPassword)
      }

      pom.project {
        name 'UndecoratorBis'
        packaging 'jar' 
        description 'A fork of in-sideFX window decoration API for JavaFX, see also https://bintray.com/in-sidefx'
        url 'https://github.com/in-sideFX/UndecoratorBis'

        scm {
          connection 'scm:git:https://github.com/Oliver-Loeffler/UndecoratorBis.git'
          developerConnection 'scm:git:https://github.com/Oliver-Loeffler/UndecoratorBis.git'
          url 'https://github.com/Oliver-Loeffler/UndecoratorBis.git'
        }

        licenses {
          license {
            name 'The 2-Clause BSD License'
            url 'https://opensource.org/licenses/BSD-2-Clause'
          }
        }

        developers {
          developer {
            id 'oloeffler'
            name 'Oliver Loeffler'
            email 'oliver@raumzeitfalle.de'
          }
        }
      }
    }
  }
}